// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfNetwork;

//
// IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork:1.0
//
public class _ConcreteNetworkStub extends org.omg.CORBA.portable.ObjectImpl
                                  implements ConcreteNetwork
{
    private static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork:1.0",
        "IDL:iris.edu/Fissures/IfNetwork/Network:1.0",
        "IDL:iris.edu/Fissures/IfNetwork/ConcreteNetworkAccess:1.0",
        "IDL:iris.edu/Fissures/IfNetwork/NetworkAccess:1.0",
        "IDL:iris.edu/Fissures/AuditSystemAccess:1.0"
    };

    public String[]
    _ids()
    {
        return _ob_ids_;
    }

    final public static java.lang.Class _ob_opsClass = ConcreteNetworkOperations.class;

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetworkAccess/a_writeable:1.0
    //
    public ConcreteNetwork
    a_writeable()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("_get_a_writeable", true);
                    in = _invoke(out);
                    ConcreteNetwork _ob_r = ConcreteNetworkHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("a_writeable", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.a_writeable();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/deactivate:1.0
    //
    public void
    deactivate()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("deactivate", true);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("deactivate", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.deactivate();
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/add_station:1.0
    //
    public void
    add_station(Station _ob_a0,
                edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws DuplicateStationId
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("add_station", true);
                    StationHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(DuplicateStationIdHelper.id()))
                        throw DuplicateStationIdHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("add_station", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    StationHelper.write(_ob_out, _ob_a0);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = StationHelper.read(_ob_in);
                    _ob_self.add_station(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/update_station:1.0
    //
    public void
    update_station(Station _ob_a0,
                   edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws StationNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("update_station", true);
                    StationHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(StationNotFoundHelper.id()))
                        throw StationNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("update_station", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    StationHelper.write(_ob_out, _ob_a0);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = StationHelper.read(_ob_in);
                    _ob_self.update_station(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/deactivate_station:1.0
    //
    public void
    deactivate_station(StationId _ob_a0,
                       edu.iris.Fissures.Time _ob_a1,
                       edu.iris.Fissures.AuditInfo[] _ob_a2)
        throws StationNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("deactivate_station", true);
                    StationIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a1);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a2);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(StationNotFoundHelper.id()))
                        throw StationNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("deactivate_station", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.deactivate_station(_ob_a0, _ob_a1, _ob_a2);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/delete_station:1.0
    //
    public void
    delete_station(StationId _ob_a0,
                   edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws StationNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("delete_station", true);
                    StationIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(StationNotFoundHelper.id()))
                        throw StationNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("delete_station", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.delete_station(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/add_site:1.0
    //
    public void
    add_site(Site _ob_a0,
             edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws StationNotFound,
               DuplicateSiteId
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("add_site", true);
                    SiteHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(StationNotFoundHelper.id()))
                        throw StationNotFoundHelper.read(in);
                    if(_ob_id.equals(DuplicateSiteIdHelper.id()))
                        throw DuplicateSiteIdHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("add_site", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    SiteHelper.write(_ob_out, _ob_a0);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = SiteHelper.read(_ob_in);
                    _ob_self.add_site(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/udpate_site:1.0
    //
    public void
    udpate_site(Site _ob_a0,
                edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws SiteNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("udpate_site", true);
                    SiteHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(SiteNotFoundHelper.id()))
                        throw SiteNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("udpate_site", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    SiteHelper.write(_ob_out, _ob_a0);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = SiteHelper.read(_ob_in);
                    _ob_self.udpate_site(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/deactivate_site:1.0
    //
    public void
    deactivate_site(SiteId _ob_a0,
                    edu.iris.Fissures.Time _ob_a1,
                    edu.iris.Fissures.AuditInfo[] _ob_a2)
        throws SiteNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("deactivate_site", true);
                    SiteIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a1);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a2);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(SiteNotFoundHelper.id()))
                        throw SiteNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("deactivate_site", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.deactivate_site(_ob_a0, _ob_a1, _ob_a2);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/delete_site:1.0
    //
    public void
    delete_site(SiteId _ob_a0,
                edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws SiteNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("delete_site", true);
                    SiteIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(SiteNotFoundHelper.id()))
                        throw SiteNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("delete_site", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.delete_site(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/add_channel:1.0
    //
    public void
    add_channel(Channel _ob_a0,
                Response _ob_a1,
                Calibration[] _ob_a2,
                Clock _ob_a3,
                Sensor _ob_a4,
                DataAcqSys _ob_a5,
                TimeCorrection[] _ob_a6,
                edu.iris.Fissures.AuditInfo[] _ob_a7)
        throws SiteNotFound,
               DuplicateChannelId
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("add_channel", true);
                    ChannelHelper.write(out, _ob_a0);
                    ResponseHelper.write(out, _ob_a1);
                    CalibrationSeqHelper.write(out, _ob_a2);
                    ClockHelper.write(out, _ob_a3);
                    SensorHelper.write(out, _ob_a4);
                    DataAcqSysHelper.write(out, _ob_a5);
                    TimeCorrectionSeqHelper.write(out, _ob_a6);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a7);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(SiteNotFoundHelper.id()))
                        throw SiteNotFoundHelper.read(in);
                    if(_ob_id.equals(DuplicateChannelIdHelper.id()))
                        throw DuplicateChannelIdHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("add_channel", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    ChannelHelper.write(_ob_out, _ob_a0);
                    ResponseHelper.write(_ob_out, _ob_a1);
                    CalibrationSeqHelper.write(_ob_out, _ob_a2);
                    ClockHelper.write(_ob_out, _ob_a3);
                    SensorHelper.write(_ob_out, _ob_a4);
                    DataAcqSysHelper.write(_ob_out, _ob_a5);
                    TimeCorrectionSeqHelper.write(_ob_out, _ob_a6);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = ChannelHelper.read(_ob_in);
                    _ob_a1 = ResponseHelper.read(_ob_in);
                    _ob_a2 = CalibrationSeqHelper.read(_ob_in);
                    _ob_a3 = ClockHelper.read(_ob_in);
                    _ob_a4 = SensorHelper.read(_ob_in);
                    _ob_a5 = DataAcqSysHelper.read(_ob_in);
                    _ob_a6 = TimeCorrectionSeqHelper.read(_ob_in);
                    _ob_self.add_channel(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4, _ob_a5, _ob_a6, _ob_a7);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/update_channel:1.0
    //
    public void
    update_channel(Channel _ob_a0,
                   edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("update_channel", true);
                    ChannelHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("update_channel", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    ChannelHelper.write(_ob_out, _ob_a0);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = ChannelHelper.read(_ob_in);
                    _ob_self.update_channel(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/deactivate_channel:1.0
    //
    public void
    deactivate_channel(ChannelId _ob_a0,
                       edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("deactivate_channel", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("deactivate_channel", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.deactivate_channel(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/delete_channel:1.0
    //
    public void
    delete_channel(ChannelId _ob_a0,
                   edu.iris.Fissures.AuditInfo[] _ob_a1)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("delete_channel", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("delete_channel", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    _ob_self.delete_channel(_ob_a0, _ob_a1);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/update_clock:1.0
    //
    public void
    update_clock(ChannelId _ob_a0,
                 Clock _ob_a1,
                 edu.iris.Fissures.Time _ob_a2,
                 edu.iris.Fissures.AuditInfo[] _ob_a3)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("update_clock", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    ClockHelper.write(out, _ob_a1);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a2);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("update_clock", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    ClockHelper.write(_ob_out, _ob_a1);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a1 = ClockHelper.read(_ob_in);
                    _ob_self.update_clock(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/update_sensor:1.0
    //
    public void
    update_sensor(ChannelId _ob_a0,
                  Sensor _ob_a1,
                  edu.iris.Fissures.Time _ob_a2,
                  edu.iris.Fissures.AuditInfo[] _ob_a3)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("update_sensor", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    SensorHelper.write(out, _ob_a1);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a2);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("update_sensor", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    SensorHelper.write(_ob_out, _ob_a1);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a1 = SensorHelper.read(_ob_in);
                    _ob_self.update_sensor(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/update_response:1.0
    //
    public void
    update_response(ChannelId _ob_a0,
                    Response _ob_a1,
                    edu.iris.Fissures.Time _ob_a2,
                    edu.iris.Fissures.AuditInfo[] _ob_a3)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("update_response", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    ResponseHelper.write(out, _ob_a1);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a2);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("update_response", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    ResponseHelper.write(_ob_out, _ob_a1);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a1 = ResponseHelper.read(_ob_in);
                    _ob_self.update_response(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/update_das:1.0
    //
    public void
    update_das(ChannelId _ob_a0,
               DataAcqSys _ob_a1,
               edu.iris.Fissures.Time _ob_a2,
               edu.iris.Fissures.AuditInfo[] _ob_a3)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("update_das", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    DataAcqSysHelper.write(out, _ob_a1);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a2);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("update_das", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    DataAcqSysHelper.write(_ob_out, _ob_a1);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a1 = DataAcqSysHelper.read(_ob_in);
                    _ob_self.update_das(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/add_calibration:1.0
    //
    public void
    add_calibration(ChannelId _ob_a0,
                    Calibration _ob_a1,
                    edu.iris.Fissures.Time _ob_a2,
                    edu.iris.Fissures.AuditInfo[] _ob_a3)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("add_calibration", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    CalibrationHelper.write(out, _ob_a1);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a2);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("add_calibration", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    CalibrationHelper.write(_ob_out, _ob_a1);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a1 = CalibrationHelper.read(_ob_in);
                    _ob_self.add_calibration(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetwork/add_time_correction:1.0
    //
    public void
    add_time_correction(ChannelId _ob_a0,
                        TimeCorrection _ob_a1,
                        edu.iris.Fissures.Time _ob_a2,
                        edu.iris.Fissures.AuditInfo[] _ob_a3)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("add_time_correction", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    TimeCorrectionHelper.write(out, _ob_a1);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a2);
                    edu.iris.Fissures.AuditInfoOptHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("add_time_correction", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    TimeCorrectionHelper.write(_ob_out, _ob_a1);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a1 = TimeCorrectionHelper.read(_ob_in);
                    _ob_self.add_time_correction(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetworkAccess/get_audit_trail_for_station:1.0
    //
    public edu.iris.Fissures.AuditElement[]
    get_audit_trail_for_station(StationId _ob_a0)
        throws StationNotFound,
               edu.iris.Fissures.NotImplemented
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_audit_trail_for_station", true);
                    StationIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    edu.iris.Fissures.AuditElement[] _ob_r = edu.iris.Fissures.AuditTrailHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(StationNotFoundHelper.id()))
                        throw StationNotFoundHelper.read(in);
                    if(_ob_id.equals(edu.iris.Fissures.NotImplementedHelper.id()))
                        throw edu.iris.Fissures.NotImplementedHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_audit_trail_for_station", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.get_audit_trail_for_station(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/ConcreteNetworkAccess/get_audit_trail_for_site:1.0
    //
    public edu.iris.Fissures.AuditElement[]
    get_audit_trail_for_site(SiteId _ob_a0)
        throws SiteNotFound,
               edu.iris.Fissures.NotImplemented
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_audit_trail_for_site", true);
                    SiteIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    edu.iris.Fissures.AuditElement[] _ob_r = edu.iris.Fissures.AuditTrailHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(SiteNotFoundHelper.id()))
                        throw SiteNotFoundHelper.read(in);
                    if(_ob_id.equals(edu.iris.Fissures.NotImplementedHelper.id()))
                        throw edu.iris.Fissures.NotImplementedHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_audit_trail_for_site", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.get_audit_trail_for_site(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/get_attributes:1.0
    //
    public NetworkAttr
    get_attributes()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_attributes", true);
                    in = _invoke(out);
                    NetworkAttr _ob_r = NetworkAttrHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_attributes", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    NetworkAttr _ob_r = _ob_self.get_attributes();
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    NetworkAttrHelper.write(_ob_out, _ob_r);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_r = NetworkAttrHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_stations:1.0
    //
    public Station[]
    retrieve_stations()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_stations", true);
                    in = _invoke(out);
                    Station[] _ob_r = StationSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_stations", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    Station[] _ob_r = _ob_self.retrieve_stations();
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        StationHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new Station[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = StationHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_for_station:1.0
    //
    public Channel[]
    retrieve_for_station(StationId _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_for_station", true);
                    StationIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    Channel[] _ob_r = ChannelSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_for_station", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    Channel[] _ob_r = _ob_self.retrieve_for_station(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ChannelHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new Channel[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = ChannelHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_grouping:1.0
    //
    public ChannelId[]
    retrieve_grouping(ChannelId _ob_a0)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_grouping", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    ChannelId[] _ob_r = ChannelGroupHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_grouping", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.retrieve_grouping(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_groupings:1.0
    //
    public ChannelId[][]
    retrieve_groupings()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_groupings", true);
                    in = _invoke(out);
                    ChannelId[][] _ob_r = ChannelGroupSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_groupings", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.retrieve_groupings();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_channel:1.0
    //
    public Channel
    retrieve_channel(ChannelId _ob_a0)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_channel", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    Channel _ob_r = ChannelHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_channel", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    Channel _ob_r = _ob_self.retrieve_channel(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    ChannelHelper.write(_ob_out, _ob_r);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_r = ChannelHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_channels_by_code:1.0
    //
    public Channel[]
    retrieve_channels_by_code(String _ob_a0,
                              String _ob_a1,
                              String _ob_a2)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_channels_by_code", true);
                    StationCodeHelper.write(out, _ob_a0);
                    SiteCodeHelper.write(out, _ob_a1);
                    ChannelCodeHelper.write(out, _ob_a2);
                    in = _invoke(out);
                    Channel[] _ob_r = ChannelSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_channels_by_code", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    Channel[] _ob_r = _ob_self.retrieve_channels_by_code(_ob_a0, _ob_a1, _ob_a2);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ChannelHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new Channel[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = ChannelHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/locate_channels:1.0
    //
    public Channel[]
    locate_channels(edu.iris.Fissures.Area _ob_a0,
                    SamplingRange _ob_a1,
                    OrientationRange _ob_a2)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("locate_channels", true);
                    edu.iris.Fissures.AreaHelper.write(out, _ob_a0);
                    SamplingRangeHelper.write(out, _ob_a1);
                    OrientationRangeHelper.write(out, _ob_a2);
                    in = _invoke(out);
                    Channel[] _ob_r = ChannelSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("locate_channels", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    edu.iris.Fissures.AreaHelper.write(_ob_out, _ob_a0);
                    SamplingRangeHelper.write(_ob_out, _ob_a1);
                    OrientationRangeHelper.write(_ob_out, _ob_a2);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_a0 = edu.iris.Fissures.AreaHelper.read(_ob_in);
                    _ob_a1 = SamplingRangeHelper.read(_ob_in);
                    _ob_a2 = OrientationRangeHelper.read(_ob_in);
                    Channel[] _ob_r = _ob_self.locate_channels(_ob_a0, _ob_a1, _ob_a2);
                    _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        ChannelHelper.write(_ob_out, _ob_r[i0]);
                    _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new Channel[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = ChannelHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_instrumentation:1.0
    //
    public Instrumentation
    retrieve_instrumentation(ChannelId _ob_a0,
                             edu.iris.Fissures.Time _ob_a1)
        throws ChannelNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_instrumentation", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    Instrumentation _ob_r = InstrumentationHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_instrumentation", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    Instrumentation _ob_r = _ob_self.retrieve_instrumentation(_ob_a0, _ob_a1);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    InstrumentationHelper.write(_ob_out, _ob_r);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_r = InstrumentationHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_calibrations:1.0
    //
    public Calibration[]
    retrieve_calibrations(ChannelId _ob_a0,
                          edu.iris.Fissures.TimeRange _ob_a1)
        throws ChannelNotFound,
               edu.iris.Fissures.NotImplemented
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_calibrations", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.TimeRangeHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    Calibration[] _ob_r = CalibrationSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    if(_ob_id.equals(edu.iris.Fissures.NotImplementedHelper.id()))
                        throw edu.iris.Fissures.NotImplementedHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_calibrations", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    Calibration[] _ob_r = _ob_self.retrieve_calibrations(_ob_a0, _ob_a1);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        CalibrationHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new Calibration[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = CalibrationHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_time_corrections:1.0
    //
    public TimeCorrection[]
    retrieve_time_corrections(ChannelId _ob_a0,
                              edu.iris.Fissures.TimeRange _ob_a1)
        throws ChannelNotFound,
               edu.iris.Fissures.NotImplemented
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_time_corrections", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    edu.iris.Fissures.TimeRangeHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    TimeCorrection[] _ob_r = TimeCorrectionSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    if(_ob_id.equals(edu.iris.Fissures.NotImplementedHelper.id()))
                        throw edu.iris.Fissures.NotImplementedHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_time_corrections", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    TimeCorrection[] _ob_r = _ob_self.retrieve_time_corrections(_ob_a0, _ob_a1);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        TimeCorrectionHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new TimeCorrection[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = TimeCorrectionHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/retrieve_all_channels:1.0
    //
    public ChannelId[]
    retrieve_all_channels(int _ob_a0,
                          ChannelIdIterHolder _ob_ah1)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_all_channels", true);
                    out.write_long(_ob_a0);
                    in = _invoke(out);
                    ChannelId[] _ob_r = ChannelIdSeqHelper.read(in);
                    _ob_ah1.value = ChannelIdIterHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_all_channels", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.retrieve_all_channels(_ob_a0, _ob_ah1);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkAccess/get_audit_trail_for_channel:1.0
    //
    public edu.iris.Fissures.AuditElement[]
    get_audit_trail_for_channel(ChannelId _ob_a0)
        throws ChannelNotFound,
               edu.iris.Fissures.NotImplemented
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_audit_trail_for_channel", true);
                    ChannelIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    edu.iris.Fissures.AuditElement[] _ob_r = edu.iris.Fissures.AuditTrailHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(ChannelNotFoundHelper.id()))
                        throw ChannelNotFoundHelper.read(in);
                    if(_ob_id.equals(edu.iris.Fissures.NotImplementedHelper.id()))
                        throw edu.iris.Fissures.NotImplementedHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_audit_trail_for_channel", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.get_audit_trail_for_channel(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/AuditSystemAccess/get_audit_trail:1.0
    //
    public edu.iris.Fissures.AuditElement[]
    get_audit_trail()
        throws edu.iris.Fissures.NotImplemented
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_audit_trail", true);
                    in = _invoke(out);
                    edu.iris.Fissures.AuditElement[] _ob_r = edu.iris.Fissures.AuditTrailHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.NotImplementedHelper.id()))
                        throw edu.iris.Fissures.NotImplementedHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_audit_trail", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ConcreteNetworkOperations _ob_self = (ConcreteNetworkOperations)_ob_so.servant;
                try
                {
                    return _ob_self.get_audit_trail();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }
}
