// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfNetwork;

//
// IDL:iris.edu/Fissures/IfNetwork/CoefficientFilter:1.0
//
final public class CoefficientFilterHelper
{
    public static void
    insert(org.omg.CORBA.Any any, CoefficientFilter val)
    {
        org.omg.CORBA.portable.OutputStream out = any.create_output_stream();
        write(out, val);
        any.read_value(out.create_input_stream(), type());
    }

    public static CoefficientFilter
    extract(org.omg.CORBA.Any any)
    {
        if(any.type().equivalent(type()))
            return read(any.create_input_stream());
        else
            throw new org.omg.CORBA.BAD_OPERATION();
    }

    private static org.omg.CORBA.TypeCode typeCode_;

    public static org.omg.CORBA.TypeCode
    type()
    {
        if(typeCode_ == null)
        {
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init();
            org.omg.CORBA.StructMember[] members = new org.omg.CORBA.StructMember[2];

            members[0] = new org.omg.CORBA.StructMember();
            members[0].name = "numerator";
            members[0].type = orb.create_sequence_tc(0, CoefficientErroredHelper.type());

            members[1] = new org.omg.CORBA.StructMember();
            members[1].name = "denominator";
            members[1].type = orb.create_sequence_tc(0, CoefficientErroredHelper.type());

            typeCode_ = orb.create_struct_tc(id(), "CoefficientFilter", members);
        }

        return typeCode_;
    }

    public static String
    id()
    {
        return "IDL:iris.edu/Fissures/IfNetwork/CoefficientFilter:1.0";
    }

    public static CoefficientFilter
    read(org.omg.CORBA.portable.InputStream in)
    {
        CoefficientFilter _ob_v = new CoefficientFilter();
        int len0 = in.read_ulong();
        _ob_v.numerator = new CoefficientErrored[len0];
        for(int i0 = 0 ; i0 < len0 ; i0++)
            _ob_v.numerator[i0] = CoefficientErroredHelper.read(in);
        int len1 = in.read_ulong();
        _ob_v.denominator = new CoefficientErrored[len1];
        for(int i1 = 0 ; i1 < len1 ; i1++)
            _ob_v.denominator[i1] = CoefficientErroredHelper.read(in);
        return _ob_v;
    }

    public static void
    write(org.omg.CORBA.portable.OutputStream out, CoefficientFilter val)
    {
        int len0 = val.numerator.length;
        out.write_ulong(len0);
        for(int i0 = 0 ; i0 < len0 ; i0++)
            CoefficientErroredHelper.write(out, val.numerator[i0]);
        int len1 = val.denominator.length;
        out.write_ulong(len1);
        for(int i1 = 0 ; i1 < len1 ; i1++)
            CoefficientErroredHelper.write(out, val.denominator[i1]);
    }
}
