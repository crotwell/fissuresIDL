// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfEvent;

//
// IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0
//
public abstract class EventFinderPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               EventFinderOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfEvent/EventFinder:1.0",
        "IDL:iris.edu/Fissures/IfEvent/EventMgr:1.0",
        "IDL:iris.edu/Fissures/IfEvent/EventDC:1.0"
    };

    public EventFinder
    _this()
    {
        return EventFinderHelper.narrow(super._this_object());
    }

    public EventFinder
    _this(org.omg.CORBA.ORB orb)
    {
        return EventFinderHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "_get_a_channel_finder",
            "_get_a_factory",
            "_get_a_finder",
            "catalogs_from",
            "get_by_name",
            "known_catalogs",
            "known_contributors",
            "query_events"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // _get_a_channel_finder
            return _OB_att_get_a_channel_finder(in, handler);

        case 1: // _get_a_factory
            return _OB_att_get_a_factory(in, handler);

        case 2: // _get_a_finder
            return _OB_att_get_a_finder(in, handler);

        case 3: // catalogs_from
            return _OB_op_catalogs_from(in, handler);

        case 4: // get_by_name
            return _OB_op_get_by_name(in, handler);

        case 5: // known_catalogs
            return _OB_op_known_catalogs(in, handler);

        case 6: // known_contributors
            return _OB_op_known_contributors(in, handler);

        case 7: // query_events
            return _OB_op_query_events(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_channel_finder(org.omg.CORBA.portable.InputStream in,
                                 org.omg.CORBA.portable.ResponseHandler handler)
    {
        EventChannelFinder _ob_r = a_channel_finder();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        EventChannelFinderHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_factory(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        EventFactory _ob_r = a_factory();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        EventFactoryHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_finder(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        EventFinder _ob_r = a_finder();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        EventFinderHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_catalogs_from(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = ContributorHelper.read(in);
        String[] _ob_r = catalogs_from(_ob_a0);
        out = handler.createReply();
        CatalogSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_by_name(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = in.read_string();
        EventAccess[] _ob_r = get_by_name(_ob_a0);
        out = handler.createReply();
        EventAccessSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_known_catalogs(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String[] _ob_r = known_catalogs();
        out = handler.createReply();
        CatalogSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_known_contributors(org.omg.CORBA.portable.InputStream in,
                              org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String[] _ob_r = known_contributors();
        out = handler.createReply();
        ContributorSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_query_events(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        edu.iris.Fissures.Area _ob_a0 = edu.iris.Fissures.AreaHelper.read(in);
        edu.iris.Fissures.Quantity _ob_a1 = edu.iris.Fissures.LengthHelper.read(in);
        edu.iris.Fissures.Quantity _ob_a2 = edu.iris.Fissures.LengthHelper.read(in);
        edu.iris.Fissures.TimeRange _ob_a3 = edu.iris.Fissures.TimeRangeHelper.read(in);
        String[] _ob_a4 = MagTypeSeqHelper.read(in);
        float _ob_a5 = in.read_float();
        float _ob_a6 = in.read_float();
        String[] _ob_a7 = CatalogSeqHelper.read(in);
        String[] _ob_a8 = ContributorSeqHelper.read(in);
        int _ob_a9 = in.read_long();
        EventSeqIterHolder _ob_ah10 = new EventSeqIterHolder();
        EventAccess[] _ob_r = query_events(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4, _ob_a5, _ob_a6, _ob_a7, _ob_a8, _ob_a9, _ob_ah10);
        out = handler.createReply();
        EventAccessSeqHelper.write(out, _ob_r);
        EventSeqIterHelper.write(out, _ob_ah10.value);
        return out;
    }
}
