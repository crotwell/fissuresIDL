// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfSeismogramDC;

//
// IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter:1.0
//
/**
 * The data center provide for retrieval of seismograms from a
 * data warehouse. Its provides for both asynchronous delivery
 * where the clients makes and request and waits for the results.
 * It also provides asynchronous access where a client makes a
 * request and is later delivered the results or must return to
 * check the status of the request and retrieve the results
 **/

public interface DataCenterOperations
{
    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/available_data:1.0
    //
    /***/

    RequestFilter[]
    available_data(RequestFilter[] a_filterseq);

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/request_seismograms:1.0
    //
    /** if long_lived is true then the request is "sticky" in that
     *the client wants the data center to return not just the data 
     *that it has in its archive currently, but also any data that it
     *receives up to the  expiration_time. For instance if a station 
     *sends its data by mailing tapes, then a researcher could issue
     *a request for data that is expected to be delivered from a 
     *recent earthquake, even thought the data center does not yet 
     *have the data. Note that expiration_time is ignored if long_lived
     *is false.*/

    String
    request_seismograms(RequestFilter[] a_filterseq,
                        DataCenterCallBack a_client,
                        boolean long_lived,
                        edu.iris.Fissures.Time expiration_time)
        throws edu.iris.Fissures.FissuresException;

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/retrieve_seismograms:1.0
    //
    /***/

    LocalSeismogram[]
    retrieve_seismograms(RequestFilter[] a_filterseq)
        throws edu.iris.Fissures.FissuresException;

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/queue_seismograms:1.0
    //
    /***/

    String
    queue_seismograms(RequestFilter[] a_filterseq)
        throws edu.iris.Fissures.FissuresException;

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/retrieve_queue:1.0
    //
    /***/

    LocalSeismogram[]
    retrieve_queue(String a_request)
        throws edu.iris.Fissures.FissuresException;

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/cancel_request:1.0
    //
    /***/

    void
    cancel_request(String a_request)
        throws edu.iris.Fissures.FissuresException;

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/request_status:1.0
    //
    /***/

    String
    request_status(String a_request)
        throws edu.iris.Fissures.FissuresException;
}
