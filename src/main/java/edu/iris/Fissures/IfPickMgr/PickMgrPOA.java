// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfPickMgr;

//
// IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0
//
public abstract class PickMgrPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               PickMgrOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfPickMgr/PickMgr:1.0",
        "IDL:iris.edu/Fissures/IfPickMgr/PickDC:1.0"
    };

    public PickMgr
    _this()
    {
        return PickMgrHelper.narrow(super._this_object());
    }

    public PickMgr
    _this(org.omg.CORBA.ORB orb)
    {
        return PickMgrHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "_get_a_writeable",
            "add_pick",
            "add_to_pick_group",
            "associate_pickgroup_to_dataset",
            "create_pick_group",
            "delete_pick",
            "get_pickgroups_for_dataset",
            "make_pick_group",
            "remove_pick_from_group",
            "remove_pick_group",
            "retrieve_pick_group",
            "retrieve_pick_group_by_name",
            "retrieve_picks_for_seismogram",
            "retrieve_picks_for_site",
            "update_pick"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // _get_a_writeable
            return _OB_att_get_a_writeable(in, handler);

        case 1: // add_pick
            return _OB_op_add_pick(in, handler);

        case 2: // add_to_pick_group
            return _OB_op_add_to_pick_group(in, handler);

        case 3: // associate_pickgroup_to_dataset
            return _OB_op_associate_pickgroup_to_dataset(in, handler);

        case 4: // create_pick_group
            return _OB_op_create_pick_group(in, handler);

        case 5: // delete_pick
            return _OB_op_delete_pick(in, handler);

        case 6: // get_pickgroups_for_dataset
            return _OB_op_get_pickgroups_for_dataset(in, handler);

        case 7: // make_pick_group
            return _OB_op_make_pick_group(in, handler);

        case 8: // remove_pick_from_group
            return _OB_op_remove_pick_from_group(in, handler);

        case 9: // remove_pick_group
            return _OB_op_remove_pick_group(in, handler);

        case 10: // retrieve_pick_group
            return _OB_op_retrieve_pick_group(in, handler);

        case 11: // retrieve_pick_group_by_name
            return _OB_op_retrieve_pick_group_by_name(in, handler);

        case 12: // retrieve_picks_for_seismogram
            return _OB_op_retrieve_picks_for_seismogram(in, handler);

        case 13: // retrieve_picks_for_site
            return _OB_op_retrieve_picks_for_site(in, handler);

        case 14: // update_pick
            return _OB_op_update_pick(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_writeable(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        PickMgr _ob_r = a_writeable();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        PickMgrHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_add_pick(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = SeismogramIdHelper.read(in);
            Pick _ob_a1 = PickHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a2 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            add_pick(_ob_a0, _ob_a1, _ob_a2);
            out = handler.createReply();
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_add_to_pick_group(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = PickGroupIdHelper.read(in);
            String _ob_a1 = PickIdHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a2 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            add_to_pick_group(_ob_a0, _ob_a1, _ob_a2);
            out = handler.createReply();
        }
        catch(UnknownPick _ob_ex)
        {
            out = handler.createExceptionReply();
            UnknownPickHelper.write(out, _ob_ex);
        }
        catch(UnknownPickGroup _ob_ex)
        {
            out = handler.createExceptionReply();
            UnknownPickGroupHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_associate_pickgroup_to_dataset(org.omg.CORBA.portable.InputStream in,
                                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = NodeIdHelper.read(in);
            String _ob_a1 = PickGroupIdHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a2 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            associate_pickgroup_to_dataset(_ob_a0, _ob_a1, _ob_a2);
            out = handler.createReply();
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_create_pick_group(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = PickGroupNameHelper.read(in);
        edu.iris.Fissures.AuditInfo[] _ob_a1 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
        String _ob_r = create_pick_group(_ob_a0, _ob_a1);
        out = handler.createReply();
        PickGroupIdHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_delete_pick(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = PickIdHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a1 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            delete_pick(_ob_a0, _ob_a1);
            out = handler.createReply();
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_pickgroups_for_dataset(org.omg.CORBA.portable.InputStream in,
                                      org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = NodeIdHelper.read(in);
            PickGroup[] _ob_r = get_pickgroups_for_dataset(_ob_a0);
            out = handler.createReply();
            PickGroupSeqHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_make_pick_group(org.omg.CORBA.portable.InputStream in,
                           org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        PickGroup _ob_a0 = PickGroupHelper.read(in);
        edu.iris.Fissures.AuditInfo[] _ob_a1 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
        String _ob_r = make_pick_group(_ob_a0, _ob_a1);
        out = handler.createReply();
        PickGroupIdHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_remove_pick_from_group(org.omg.CORBA.portable.InputStream in,
                                  org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = PickGroupIdHelper.read(in);
            String _ob_a1 = PickIdHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a2 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            remove_pick_from_group(_ob_a0, _ob_a1, _ob_a2);
            out = handler.createReply();
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_remove_pick_group(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = PickGroupIdHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a1 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            remove_pick_group(_ob_a0, _ob_a1);
            out = handler.createReply();
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_retrieve_pick_group(org.omg.CORBA.portable.InputStream in,
                               org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = PickGroupIdHelper.read(in);
            PickGroup[] _ob_r = retrieve_pick_group(_ob_a0);
            out = handler.createReply();
            PickGroupSeqHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_retrieve_pick_group_by_name(org.omg.CORBA.portable.InputStream in,
                                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = PickGroupNameHelper.read(in);
            PickGroup[] _ob_r = retrieve_pick_group_by_name(_ob_a0);
            out = handler.createReply();
            PickGroupSeqHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_retrieve_picks_for_seismogram(org.omg.CORBA.portable.InputStream in,
                                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = SeismogramIdHelper.read(in);
            Pick[] _ob_r = retrieve_picks_for_seismogram(_ob_a0);
            out = handler.createReply();
            PickSeqHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_retrieve_picks_for_site(org.omg.CORBA.portable.InputStream in,
                                   org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            edu.iris.Fissures.IfNetwork.SiteId _ob_a0 = SiteIdHelper.read(in);
            edu.iris.Fissures.TimeRange _ob_a1 = edu.iris.Fissures.TimeRangeHelper.read(in);
            Pick[] _ob_r = retrieve_picks_for_site(_ob_a0, _ob_a1);
            out = handler.createReply();
            PickSeqHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_update_pick(org.omg.CORBA.portable.InputStream in,
                       org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            Pick _ob_a0 = PickHelper.read(in);
            edu.iris.Fissures.AuditInfo[] _ob_a1 = edu.iris.Fissures.AuditInfoOptHelper.read(in);
            update_pick(_ob_a0, _ob_a1);
            out = handler.createReply();
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }
}
