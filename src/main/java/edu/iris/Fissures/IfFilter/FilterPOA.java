// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfFilter;

//
// IDL:iris.edu/Fissures/IfFilter/Filter:1.0
//
public abstract class FilterPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               FilterOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfFilter/Filter:1.0",
        "IDL:iris.edu/Fissures/IfService/Service:1.0"
    };

    public Filter
    _this()
    {
        return FilterHelper.narrow(super._this_object());
    }

    public Filter
    _this(org.omg.CORBA.ORB orb)
    {
        return FilterHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "filter_seismograms",
            "get_configuration",
            "get_configuration_options",
            "get_default_configuration",
            "get_setting_for",
            "possible_options",
            "reset_to_default",
            "set_configuration"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // filter_seismograms
            return _OB_op_filter_seismograms(in, handler);

        case 1: // get_configuration
            return _OB_op_get_configuration(in, handler);

        case 2: // get_configuration_options
            return _OB_op_get_configuration_options(in, handler);

        case 3: // get_default_configuration
            return _OB_op_get_default_configuration(in, handler);

        case 4: // get_setting_for
            return _OB_op_get_setting_for(in, handler);

        case 5: // possible_options
            return _OB_op_possible_options(in, handler);

        case 6: // reset_to_default
            return _OB_op_reset_to_default(in, handler);

        case 7: // set_configuration
            return _OB_op_set_configuration(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_filter_seismograms(org.omg.CORBA.portable.InputStream in,
                              org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = ConfigurationIdHelper.read(in);
            FilterStyle _ob_a1 = FilterStyleHelper.read(in);
            edu.iris.Fissures.IfSeismogramMgr.Seismogram[] _ob_a2 = edu.iris.Fissures.IfSeismogramMgr.SeismogramSeqHelper.read(in);
            FilterErrorSeqHolder _ob_ah3 = new FilterErrorSeqHolder();
            boolean _ob_r = filter_seismograms(_ob_a0, _ob_a1, _ob_a2, _ob_ah3);
            out = handler.createReply();
            out.write_boolean(_ob_r);
            FilterErrorSeqHelper.write(out, _ob_ah3.value);
        }
        catch(edu.iris.Fissures.IfService.UnknownConfiguration _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.IfService.UnknownConfigurationHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_configuration(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = edu.iris.Fissures.IfService.ConfigurationIdHelper.read(in);
            edu.iris.Fissures.IfService.ServiceSetting[] _ob_r = get_configuration(_ob_a0);
            out = handler.createReply();
            edu.iris.Fissures.IfService.ServiceConfigurationHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.IfService.UnknownConfiguration _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.IfService.UnknownConfigurationHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_configuration_options(org.omg.CORBA.portable.InputStream in,
                                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        edu.iris.Fissures.IfService.ServiceOption[] _ob_r = get_configuration_options();
        out = handler.createReply();
        edu.iris.Fissures.IfService.ServiceOptionSeqHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_default_configuration(org.omg.CORBA.portable.InputStream in,
                                     org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        edu.iris.Fissures.IfService.ServiceSetting[] _ob_r = get_default_configuration();
        out = handler.createReply();
        edu.iris.Fissures.IfService.ServiceConfigurationHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_setting_for(org.omg.CORBA.portable.InputStream in,
                           org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = in.read_string();
            edu.iris.Fissures.IfService.ServiceSetting _ob_r = get_setting_for(_ob_a0);
            out = handler.createReply();
            edu.iris.Fissures.IfService.ServiceSettingHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.IfService.UnknownOption _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.IfService.UnknownOptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_possible_options(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        FilterInfo _ob_r = possible_options();
        out = handler.createReply();
        FilterInfoHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_reset_to_default(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_r = reset_to_default();
        out = handler.createReply();
        edu.iris.Fissures.IfService.ConfigurationIdHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_set_configuration(org.omg.CORBA.portable.InputStream in,
                             org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            edu.iris.Fissures.IfService.ServiceSetting[] _ob_a0 = edu.iris.Fissures.IfService.ServiceConfigurationHelper.read(in);
            String _ob_r = set_configuration(_ob_a0);
            out = handler.createReply();
            edu.iris.Fissures.IfService.ConfigurationIdHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.IfService.UnknownOption _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.IfService.UnknownOptionHelper.write(out, _ob_ex);
        }
        catch(edu.iris.Fissures.IfService.InvalidValue _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.IfService.InvalidValueHelper.write(out, _ob_ex);
        }
        return out;
    }
}
