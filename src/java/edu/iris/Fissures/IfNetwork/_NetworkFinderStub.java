// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfNetwork;

//
// IDL:iris.edu/Fissures/IfNetwork/NetworkFinder:1.0
//
public class _NetworkFinderStub extends org.omg.CORBA.portable.ObjectImpl
                                implements NetworkFinder
{
    private static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfNetwork/NetworkFinder:1.0",
    };

    public String[]
    _ids()
    {
        return _ob_ids_;
    }

    final public static java.lang.Class _ob_opsClass = NetworkFinderOperations.class;

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkFinder/retrieve_by_id:1.0
    //
    public NetworkAccess
    retrieve_by_id(NetworkId _ob_a0)
        throws NetworkNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_by_id", true);
                    NetworkIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    NetworkAccess _ob_r = NetworkAccessHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(NetworkNotFoundHelper.id()))
                        throw NetworkNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_by_id", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                NetworkFinderOperations _ob_self = (NetworkFinderOperations)_ob_so.servant;
                try
                {
                    NetworkAccess _ob_r = _ob_self.retrieve_by_id(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    NetworkAccessHelper.write(_ob_out, _ob_r);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    _ob_r = NetworkAccessHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkFinder/retrieve_by_code:1.0
    //
    public NetworkAccess[]
    retrieve_by_code(String _ob_a0)
        throws NetworkNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_by_code", true);
                    NetworkCodeHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    NetworkAccess[] _ob_r = NetworkAccessSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(NetworkNotFoundHelper.id()))
                        throw NetworkNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_by_code", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                NetworkFinderOperations _ob_self = (NetworkFinderOperations)_ob_so.servant;
                try
                {
                    NetworkAccess[] _ob_r = _ob_self.retrieve_by_code(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        NetworkAccessHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new NetworkAccess[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = NetworkAccessHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkFinder/retrieve_by_name:1.0
    //
    public NetworkAccess[]
    retrieve_by_name(String _ob_a0)
        throws NetworkNotFound
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_by_name", true);
                    out.write_string(_ob_a0);
                    in = _invoke(out);
                    NetworkAccess[] _ob_r = NetworkAccessSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(NetworkNotFoundHelper.id()))
                        throw NetworkNotFoundHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_by_name", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                NetworkFinderOperations _ob_self = (NetworkFinderOperations)_ob_so.servant;
                try
                {
                    NetworkAccess[] _ob_r = _ob_self.retrieve_by_name(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        NetworkAccessHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new NetworkAccess[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = NetworkAccessHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/NetworkFinder/retrieve_all:1.0
    //
    public NetworkAccess[]
    retrieve_all()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_all", true);
                    in = _invoke(out);
                    NetworkAccess[] _ob_r = NetworkAccessSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_all", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                NetworkFinderOperations _ob_self = (NetworkFinderOperations)_ob_so.servant;
                try
                {
                    NetworkAccess[] _ob_r = _ob_self.retrieve_all();
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        NetworkAccessHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new NetworkAccess[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = NetworkAccessHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }
}
