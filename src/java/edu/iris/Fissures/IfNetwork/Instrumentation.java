// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfNetwork;

//
// IDL:iris.edu/Fissures/IfNetwork/Instrumentation:1.0
//
/***/

public abstract class Instrumentation implements org.omg.CORBA.portable.StreamableValue
{
    //
    // IDL:iris.edu/Fissures/IfNetwork/Instrumentation/the_response:1.0
    //
    /***/

    public Response the_response;

    //
    // IDL:iris.edu/Fissures/IfNetwork/Instrumentation/effective_time:1.0
    //
    /***/

    public edu.iris.Fissures.TimeRange effective_time;

    //
    // IDL:iris.edu/Fissures/IfNetwork/Instrumentation/the_clock:1.0
    //
    /***/

    public Clock the_clock;

    //
    // IDL:iris.edu/Fissures/IfNetwork/Instrumentation/the_sensor:1.0
    //
    /***/

    public Sensor the_sensor;

    //
    // IDL:iris.edu/Fissures/IfNetwork/Instrumentation/das:1.0
    //
    /***/

    public DataAcqSys das;

    private static String[] _OB_truncatableIds_ =
    {
        InstrumentationHelper.id()
    };

    public String[]
    _truncatable_ids()
    {
        return _OB_truncatableIds_;
    }

    public void
    _read(org.omg.CORBA.portable.InputStream in)
    {
        the_response = ResponseHelper.read(in);
        effective_time = edu.iris.Fissures.TimeRangeHelper.read(in);
        the_clock = ClockHelper.read(in);
        the_sensor = SensorHelper.read(in);
        das = DataAcqSysHelper.read(in);
    }

    public void
    _write(org.omg.CORBA.portable.OutputStream out)
    {
        ResponseHelper.write(out, the_response);
        edu.iris.Fissures.TimeRangeHelper.write(out, effective_time);
        ClockHelper.write(out, the_clock);
        SensorHelper.write(out, the_sensor);
        DataAcqSysHelper.write(out, das);
    }

    public org.omg.CORBA.TypeCode
    _type()
    {
        return InstrumentationHelper.type();
    }
}
