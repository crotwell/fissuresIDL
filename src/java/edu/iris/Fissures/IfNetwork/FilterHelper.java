// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfNetwork;

//
// IDL:iris.edu/Fissures/IfNetwork/Filter:1.0
//
final public class FilterHelper
{
    public static void
    insert(org.omg.CORBA.Any any, Filter val)
    {
        org.omg.CORBA.portable.OutputStream out = any.create_output_stream();
        write(out, val);
        any.read_value(out.create_input_stream(), type());
    }

    public static Filter
    extract(org.omg.CORBA.Any any)
    {
        if(any.type().equivalent(type()))
            return read(any.create_input_stream());
        else
            throw new org.omg.CORBA.BAD_OPERATION();
    }

    private static org.omg.CORBA.TypeCode typeCode_;

    public static org.omg.CORBA.TypeCode
    type()
    {
        if(typeCode_ == null)
        {
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init();
            org.omg.CORBA.UnionMember[] members = new org.omg.CORBA.UnionMember[3];

            members[0] = new org.omg.CORBA.UnionMember();
            members[0].name = "coeff_filter";
            members[0].type = CoefficientFilterHelper.type();
            members[0].label = orb.create_any();
            FilterTypeHelper.insert(members[0].label, FilterType.from_int(0));

            members[1] = new org.omg.CORBA.UnionMember();
            members[1].name = "pole_zero_filter";
            members[1].type = PoleZeroFilterHelper.type();
            members[1].label = orb.create_any();
            FilterTypeHelper.insert(members[1].label, FilterType.from_int(1));

            members[2] = new org.omg.CORBA.UnionMember();
            members[2].name = "list_filter";
            members[2].type = ListFilterHelper.type();
            members[2].label = orb.create_any();
            FilterTypeHelper.insert(members[2].label, FilterType.from_int(2));

            org.omg.CORBA.TypeCode discType = FilterTypeHelper.type();
            typeCode_ = orb.create_union_tc(id(), "Filter", discType, members);
        }

        return typeCode_;
    }

    public static String
    id()
    {
        return "IDL:iris.edu/Fissures/IfNetwork/Filter:1.0";
    }

    public static Filter
    read(org.omg.CORBA.portable.InputStream in)
    {
        Filter _ob_v = new Filter();
        FilterType _ob_d;
        _ob_d = FilterTypeHelper.read(in);

        switch(_ob_d.value())
        {
        case FilterType._COEFFICIENT:
        {
            CoefficientFilter _ob_m;
            _ob_m = CoefficientFilterHelper.read(in);
            _ob_v.coeff_filter(_ob_m);
            break;
        }

        case FilterType._POLEZERO:
        {
            PoleZeroFilter _ob_m;
            _ob_m = PoleZeroFilterHelper.read(in);
            _ob_v.pole_zero_filter(_ob_m);
            break;
        }

        case FilterType._LIST:
        {
            ListFilter _ob_m;
            _ob_m = ListFilterHelper.read(in);
            _ob_v.list_filter(_ob_m);
            break;
        }
        }

        return _ob_v;
    }

    public static void
    write(org.omg.CORBA.portable.OutputStream out, Filter val)
    {
        FilterType _ob_d = val.discriminator();
        FilterTypeHelper.write(out, _ob_d);

        switch(_ob_d.value())
        {
        case FilterType._COEFFICIENT:
        {
            CoefficientFilter _ob_m = val.coeff_filter();
            CoefficientFilterHelper.write(out, _ob_m);
            break;
        }

        case FilterType._POLEZERO:
        {
            PoleZeroFilter _ob_m = val.pole_zero_filter();
            PoleZeroFilterHelper.write(out, _ob_m);
            break;
        }

        case FilterType._LIST:
        {
            ListFilter _ob_m = val.list_filter();
            ListFilterHelper.write(out, _ob_m);
            break;
        }
        }
    }
}
