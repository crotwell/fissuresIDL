// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfParameterMgr;

//
// IDL:iris.edu/Fissures/IfParameterMgr/ParmSetFinder:1.0
//
public abstract class ParmSetFinderPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               ParmSetFinderOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfParameterMgr/ParmSetFinder:1.0",
        "IDL:iris.edu/Fissures/IfParameterMgr/ParameterComponent:1.0"
    };

    public ParmSetFinder
    _this()
    {
        return ParmSetFinderHelper.narrow(super._this_object());
    }

    public ParmSetFinder
    _this(org.omg.CORBA.ORB orb)
    {
        return ParmSetFinderHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "_get_a_factory",
            "_get_a_parm__mgr",
            "_get_a_parmset_finder",
            "find_all_parm_def_by_creator",
            "find_all_parm_defs",
            "find_defined_parm_names",
            "find_parm_def",
            "get_parm_set_by_name",
            "get_parm_sets_by_creator"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // _get_a_factory
            return _OB_att_get_a_factory(in, handler);

        case 1: // _get_a_parm__mgr
            return _OB_att_get_a_parm__mgr(in, handler);

        case 2: // _get_a_parmset_finder
            return _OB_att_get_a_parmset_finder(in, handler);

        case 3: // find_all_parm_def_by_creator
            return _OB_op_find_all_parm_def_by_creator(in, handler);

        case 4: // find_all_parm_defs
            return _OB_op_find_all_parm_defs(in, handler);

        case 5: // find_defined_parm_names
            return _OB_op_find_defined_parm_names(in, handler);

        case 6: // find_parm_def
            return _OB_op_find_parm_def(in, handler);

        case 7: // get_parm_set_by_name
            return _OB_op_get_parm_set_by_name(in, handler);

        case 8: // get_parm_sets_by_creator
            return _OB_op_get_parm_sets_by_creator(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_factory(org.omg.CORBA.portable.InputStream in,
                          org.omg.CORBA.portable.ResponseHandler handler)
    {
        ParmSetFactory _ob_r = a_factory();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ParmSetFactoryHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_parm__mgr(org.omg.CORBA.portable.InputStream in,
                            org.omg.CORBA.portable.ResponseHandler handler)
    {
        ParameterMgrAccess _ob_r = a_parm__mgr();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ParameterMgrAccessHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_att_get_a_parmset_finder(org.omg.CORBA.portable.InputStream in,
                                 org.omg.CORBA.portable.ResponseHandler handler)
    {
        ParmSetFinder _ob_r = a_parmset_finder();
        org.omg.CORBA.portable.OutputStream out = handler.createReply();
        ParmSetFinderHelper.write(out, _ob_r);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_find_all_parm_def_by_creator(org.omg.CORBA.portable.InputStream in,
                                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = in.read_string();
        int _ob_a1 = in.read_long();
        ParameterDefIteratorHolder _ob_ah2 = new ParameterDefIteratorHolder();
        ParmDef[] _ob_r = find_all_parm_def_by_creator(_ob_a0, _ob_a1, _ob_ah2);
        out = handler.createReply();
        ParmDefSeqHelper.write(out, _ob_r);
        ParameterDefIteratorHelper.write(out, _ob_ah2.value);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_find_all_parm_defs(org.omg.CORBA.portable.InputStream in,
                              org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        int _ob_a0 = in.read_long();
        ParameterDefIteratorHolder _ob_ah1 = new ParameterDefIteratorHolder();
        ParmDef[] _ob_r = find_all_parm_defs(_ob_a0, _ob_ah1);
        out = handler.createReply();
        ParmDefSeqHelper.write(out, _ob_r);
        ParameterDefIteratorHelper.write(out, _ob_ah1.value);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_find_defined_parm_names(org.omg.CORBA.portable.InputStream in,
                                   org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        int _ob_a0 = in.read_long();
        ParameterNameIteratorHolder _ob_ah1 = new ParameterNameIteratorHolder();
        String[] _ob_r = find_defined_parm_names(_ob_a0, _ob_ah1);
        out = handler.createReply();
        ParameterNameSeqHelper.write(out, _ob_r);
        ParameterNameIteratorHelper.write(out, _ob_ah1.value);
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_find_parm_def(org.omg.CORBA.portable.InputStream in,
                         org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = ParameterNameHelper.read(in);
            ParmDef _ob_r = find_parm_def(_ob_a0);
            out = handler.createReply();
            ParmDefHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_parm_set_by_name(org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        try
        {
            String _ob_a0 = ParmSetNameHelper.read(in);
            ParmSetAccess _ob_r = get_parm_set_by_name(_ob_a0);
            out = handler.createReply();
            ParmSetAccessHelper.write(out, _ob_r);
        }
        catch(edu.iris.Fissures.FissuresException _ob_ex)
        {
            out = handler.createExceptionReply();
            edu.iris.Fissures.FissuresExceptionHelper.write(out, _ob_ex);
        }
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_get_parm_sets_by_creator(org.omg.CORBA.portable.InputStream in,
                                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        int _ob_a0 = in.read_long();
        ParmSetIteratorHolder _ob_ah1 = new ParmSetIteratorHolder();
        ParmSet[] _ob_r = get_parm_sets_by_creator(_ob_a0, _ob_ah1);
        out = handler.createReply();
        ParmSetSeqHelper.write(out, _ob_r);
        ParmSetIteratorHelper.write(out, _ob_ah1.value);
        return out;
    }
}
