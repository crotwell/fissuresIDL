// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfSeismogramMgr;

//
// IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin:1.0
//
public class _ChannelMirrorAdminStub extends org.omg.CORBA.portable.ObjectImpl
                                     implements ChannelMirrorAdmin
{
    private static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin:1.0",
    };

    public String[]
    _ids()
    {
        return _ob_ids_;
    }

    final public static java.lang.Class _ob_opsClass = ChannelMirrorAdminOperations.class;

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/active_seismogram_mirrors:1.0
    //
    public int
    active_seismogram_mirrors()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("active_seismogram_mirrors", true);
                    in = _invoke(out);
                    int _ob_r = in.read_long();
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("active_seismogram_mirrors", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    return _ob_self.active_seismogram_mirrors();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/get_mirrored_seismograms:1.0
    //
    public Seismogram[]
    get_mirrored_seismograms()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_mirrored_seismograms", true);
                    in = _invoke(out);
                    Seismogram[] _ob_r = SeismogramSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_mirrored_seismograms", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    return _ob_self.get_mirrored_seismograms();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/get_factory_mirrors:1.0
    //
    public SeismogramFactory[]
    get_factory_mirrors()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("get_factory_mirrors", true);
                    in = _invoke(out);
                    SeismogramFactory[] _ob_r = SeismogramFactorySeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("get_factory_mirrors", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    return _ob_self.get_factory_mirrors();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/stop_mirrors:1.0
    //
    public void
    stop_mirrors(SeismogramFactory[] _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("stop_mirrors", true);
                    SeismogramFactorySeqHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("stop_mirrors", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    _ob_self.stop_mirrors(_ob_a0);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/stop_mirroring:1.0
    //
    public void
    stop_mirroring()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("stop_mirroring", true);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("stop_mirroring", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    _ob_self.stop_mirroring();
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/resume_mirroring:1.0
    //
    public void
    resume_mirroring()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("resume_mirroring", true);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("resume_mirroring", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    _ob_self.resume_mirroring();
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramMgr/ChannelMirrorAdmin/is_mirroring:1.0
    //
    public boolean
    is_mirroring()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("is_mirroring", true);
                    in = _invoke(out);
                    boolean _ob_r = in.read_boolean();
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("is_mirroring", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                ChannelMirrorAdminOperations _ob_self = (ChannelMirrorAdminOperations)_ob_so.servant;
                try
                {
                    return _ob_self.is_mirroring();
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }
}
