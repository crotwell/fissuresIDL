// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfSeismogramDC;

//
// IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0
//
public abstract class DataCenterCallBackPOA
    extends org.omg.PortableServer.Servant
    implements org.omg.CORBA.portable.InvokeHandler,
               DataCenterCallBackOperations
{
    static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfSeismogramDC/DataCenterCallBack:1.0",
    };

    public DataCenterCallBack
    _this()
    {
        return DataCenterCallBackHelper.narrow(super._this_object());
    }

    public DataCenterCallBack
    _this(org.omg.CORBA.ORB orb)
    {
        return DataCenterCallBackHelper.narrow(super._this_object(orb));
    }

    public String[]
    _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId)
    {
        return _ob_ids_;
    }

    public org.omg.CORBA.portable.OutputStream
    _invoke(String opName,
            org.omg.CORBA.portable.InputStream in,
            org.omg.CORBA.portable.ResponseHandler handler)
    {
        final String[] _ob_names =
        {
            "canceled",
            "finished",
            "return_error",
            "return_group",
            "return_seismograms"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            int _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(opName);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            else if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // canceled
            return _OB_op_canceled(in, handler);

        case 1: // finished
            return _OB_op_finished(in, handler);

        case 2: // return_error
            return _OB_op_return_error(in, handler);

        case 3: // return_group
            return _OB_op_return_group(in, handler);

        case 4: // return_seismograms
            return _OB_op_return_seismograms(in, handler);
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_canceled(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = ServerRequestIdHelper.read(in);
        canceled(_ob_a0);
        out = handler.createReply();
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_finished(org.omg.CORBA.portable.InputStream in,
                    org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = ServerRequestIdHelper.read(in);
        finished(_ob_a0);
        out = handler.createReply();
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_return_error(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = ServerRequestIdHelper.read(in);
        edu.iris.Fissures.Error _ob_a1 = ErrorHelper.read(in);
        RequestFilter[] _ob_a2 = RequestFilterSeqHelper.read(in);
        return_error(_ob_a0, _ob_a1, _ob_a2);
        out = handler.createReply();
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_return_group(org.omg.CORBA.portable.InputStream in,
                        org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = ServerRequestIdHelper.read(in);
        LocalMotionVector[] _ob_a1 = LocalMotionVectorSeqHelper.read(in);
        return_group(_ob_a0, _ob_a1);
        out = handler.createReply();
        return out;
    }

    private org.omg.CORBA.portable.OutputStream
    _OB_op_return_seismograms(org.omg.CORBA.portable.InputStream in,
                              org.omg.CORBA.portable.ResponseHandler handler)
    {
        org.omg.CORBA.portable.OutputStream out = null;
        String _ob_a0 = ServerRequestIdHelper.read(in);
        LocalSeismogram[] _ob_a1 = LocalSeismogramSeqHelper.read(in);
        return_seismograms(_ob_a0, _ob_a1);
        out = handler.createReply();
        return out;
    }
}
