// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures.IfSeismogramDC;

//
// IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter:1.0
//
public class _GroupingDataCenterStub extends org.omg.CORBA.portable.ObjectImpl
                                     implements GroupingDataCenter
{
    private static final String[] _ob_ids_ =
    {
        "IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter:1.0",
        "IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter:1.0"
    };

    public String[]
    _ids()
    {
        return _ob_ids_;
    }

    final public static java.lang.Class _ob_opsClass = GroupingDataCenterOperations.class;

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter/request_groups:1.0
    //
    public String
    request_groups(GroupRequest[] _ob_a0,
                   DataCenterCallBack _ob_a1)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("request_groups", true);
                    GroupRequestSeqHelper.write(out, _ob_a0);
                    DataCenterCallBackHelper.write(out, _ob_a1);
                    in = _invoke(out);
                    String _ob_r = ServerRequestIdHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("request_groups", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    return _ob_self.request_groups(_ob_a0, _ob_a1);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter/retrieve_groups:1.0
    //
    public LocalMotionVector[]
    retrieve_groups(GroupRequest[] _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_groups", true);
                    GroupRequestSeqHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    LocalMotionVector[] _ob_r = LocalMotionVectorSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_groups", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    LocalMotionVector[] _ob_r = _ob_self.retrieve_groups(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        LocalMotionVectorHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new LocalMotionVector[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = LocalMotionVectorHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter/queue_groups:1.0
    //
    public String
    queue_groups(GroupRequest[] _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("queue_groups", true);
                    GroupRequestSeqHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    String _ob_r = ServerRequestIdHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("queue_groups", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    return _ob_self.queue_groups(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/GroupingDataCenter/retrieve_group_queue:1.0
    //
    public LocalMotionVector[]
    retrieve_group_queue(String _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_group_queue", true);
                    ServerRequestIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    LocalMotionVector[] _ob_r = LocalMotionVectorSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_group_queue", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    LocalMotionVector[] _ob_r = _ob_self.retrieve_group_queue(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        LocalMotionVectorHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new LocalMotionVector[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = LocalMotionVectorHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/available_data:1.0
    //
    public RequestFilter[]
    available_data(RequestFilter[] _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("available_data", true);
                    RequestFilterSeqHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    RequestFilter[] _ob_r = RequestFilterSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("available_data", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    return _ob_self.available_data(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/request_seismograms:1.0
    //
    public String
    request_seismograms(RequestFilter[] _ob_a0,
                        DataCenterCallBack _ob_a1,
                        boolean _ob_a2,
                        edu.iris.Fissures.Time _ob_a3)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("request_seismograms", true);
                    RequestFilterSeqHelper.write(out, _ob_a0);
                    DataCenterCallBackHelper.write(out, _ob_a1);
                    out.write_boolean(_ob_a2);
                    edu.iris.Fissures.TimeHelper.write(out, _ob_a3);
                    in = _invoke(out);
                    String _ob_r = ServerRequestIdHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("request_seismograms", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    return _ob_self.request_seismograms(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/retrieve_seismograms:1.0
    //
    public LocalSeismogram[]
    retrieve_seismograms(RequestFilter[] _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_seismograms", true);
                    RequestFilterSeqHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    LocalSeismogram[] _ob_r = LocalSeismogramSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_seismograms", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    LocalSeismogram[] _ob_r = _ob_self.retrieve_seismograms(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        LocalSeismogramHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new LocalSeismogram[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = LocalSeismogramHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/queue_seismograms:1.0
    //
    public String
    queue_seismograms(RequestFilter[] _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("queue_seismograms", true);
                    RequestFilterSeqHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    String _ob_r = ServerRequestIdHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("queue_seismograms", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    return _ob_self.queue_seismograms(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/retrieve_queue:1.0
    //
    public LocalSeismogram[]
    retrieve_queue(String _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("retrieve_queue", true);
                    ServerRequestIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    LocalSeismogram[] _ob_r = LocalSeismogramSeqHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("retrieve_queue", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    LocalSeismogram[] _ob_r = _ob_self.retrieve_queue(_ob_a0);
                    org.omg.CORBA.portable.OutputStream _ob_out = _orb().create_output_stream();
                    int len0 = _ob_r.length;
                    _ob_out.write_ulong(len0);
                    for(int i0 = 0 ; i0 < len0 ; i0++)
                        LocalSeismogramHelper.write(_ob_out, _ob_r[i0]);
                    org.omg.CORBA.portable.InputStream _ob_in = _ob_out.create_input_stream();
                    int len1 = _ob_in.read_ulong();
                    _ob_r = new LocalSeismogram[len1];
                    for(int i1 = 0 ; i1 < len1 ; i1++)
                        _ob_r[i1] = LocalSeismogramHelper.read(_ob_in);
                    return _ob_r;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/cancel_request:1.0
    //
    public void
    cancel_request(String _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("cancel_request", true);
                    ServerRequestIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("cancel_request", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    _ob_self.cancel_request(_ob_a0);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:iris.edu/Fissures/IfSeismogramDC/DataCenter/request_status:1.0
    //
    public String
    request_status(String _ob_a0)
        throws edu.iris.Fissures.FissuresException
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("request_status", true);
                    ServerRequestIdHelper.write(out, _ob_a0);
                    in = _invoke(out);
                    String _ob_r = RequestStatusHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    if(_ob_id.equals(edu.iris.Fissures.FissuresExceptionHelper.id()))
                        throw edu.iris.Fissures.FissuresExceptionHelper.read(in);
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("request_status", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                GroupingDataCenterOperations _ob_self = (GroupingDataCenterOperations)_ob_so.servant;
                try
                {
                    return _ob_self.request_status(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }
}
