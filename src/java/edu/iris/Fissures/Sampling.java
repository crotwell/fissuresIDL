// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.5

package edu.iris.Fissures;

//
// IDL:iris.edu/Fissures/Sampling:1.0
//
/** Represents the rate of periodic recording of data. In order to
 *avoid the problems associated with division and roundoff, this
 *keeps the information in its original form. Both the number of
 *points and the time interval are stored. This does lead to
 *many equivalent ways of expressing the same value. For instance
 *20 samples per second could be given as 20 points in one second
 *or 1 sample in 0.05 seconds. However, using 30 samples in one second
 *is better than .333333...<P>
 *One should be careful to remember the n-1 rule. If there is a
 *seismogram with 21 samples where the first occurs at 12:00:00.000
 *and the last occurs at 12:00:01.000, the sampling is 20 samples in
 *one second, not 21 samples in one second!
 **/

public abstract class Sampling implements org.omg.CORBA.portable.StreamableValue
{
    //
    // IDL:iris.edu/Fissures/Sampling/numPoints:1.0
    //
    /***/

    public int numPoints;

    //
    // IDL:iris.edu/Fissures/Sampling/interval:1.0
    //
    /***/

    public Quantity interval;

    private static String[] _OB_truncatableIds_ =
    {
        SamplingHelper.id()
    };

    public String[]
    _truncatable_ids()
    {
        return _OB_truncatableIds_;
    }

    public void
    _read(org.omg.CORBA.portable.InputStream in)
    {
        numPoints = in.read_long();
        interval = TimeIntervalHelper.read(in);
    }

    public void
    _write(org.omg.CORBA.portable.OutputStream out)
    {
        out.write_long(numPoints);
        TimeIntervalHelper.write(out, interval);
    }

    public org.omg.CORBA.TypeCode
    _type()
    {
        return SamplingHelper.type();
    }
}
